version: "3"
services:
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - TOKEN=${DDNS_TOKEN}
      - SUBDOMAINS=${DDNS_DOMAINS}
      - TZ=Europe/Rome
    restart: unless-stopped
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ~/volumes/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`${IP_ADDRESS}`)"
      - "traefik.http.routers.homeassistant.entrypoints=homeassistant"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    devices:
      - "/dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_446c70406a45ed118942c68f0a86e0b4-if00-port0:/dev/ttyUSB0"
    restart: unless-stopped
    networks:
      - frontend
    depends_on:
      - traefik
  traefik:
    image: traefik:v2.0
    container_name: traefik
    command:
#      - --log.level=DEBUG
      - --api=true
      - --api.dashboard=true
      - --providers.docker
      - --entryPoints.webSecure.address=:443
      - --entryPoints.ttrss.address=:${PORT_TTRSS}
      - --entryPoints.homeassistant.address=:${PORT_HOMEASSISTANT}
      - --entryPoints.traefik.address=:${PORT_DASHBOARD}
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=${NETWORK_NAME}
      - --certificatesResolvers.le.acme.email=kwbmm@${URL}
      - --certificatesResolvers.le.acme.tlsChallenge=true
      - --certificatesResolvers.le.acme.dnsChallenge=true
      - --certificatesResolvers.le.acme.dnsChallenge.provider=duckdns
      # Staging server, test purposes only
#      - --certificatesResolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.le.acme.storage=/letsencrypt/acme.json
    environment:
      - DUCKDNS_TOKEN=${DDNS_TOKEN}
    ports:
      # The Web UI
      - "${PORT_DASHBOARD}:${PORT_DASHBOARD}"
      # For certificates renewal
      - "443:443"
      # TTRSS
      - "${PORT_TTRSS}:${PORT_TTRSS}"
      # Homeassistant
      - "${PORT_HOMEASSISTANT}:${PORT_HOMEASSISTANT}"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/volumes/traefik-letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${IP_ADDRESS}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=traefik"
      - "traefik.http.routers.api.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${BASIC_AUTH_USR}:${BASIC_AUTH_PSW}"
    networks:
      - frontend
    restart: unless-stopped
  ttrss:
    image: nventiveux/ttrss:latest
    container_name: ttrss
    environment:
      - TTRSS_SELF_URL_PATH=https://${URL}:${PORT_TTRSS}
      - TTRSS_DB_HOST=ttrss-db
      - TTRSS_DB_TYPE=pgsql
      - TTRSS_DB_USER=ttrss
      - TTRSS_DB_PASS=ttrss
    volumes:
      - ~/volumes/ttrss-plugins:/srv/ttrss/plugins.local
    restart: unless-stopped
    depends_on:
      - ttrss-db
      - traefik
      - duckdns
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ttrss.rule=Host(`${URL}`)"
      - "traefik.http.routers.ttrss.entrypoints=ttrss"
      - "traefik.http.middlewares.secureRedirectTTRss.redirectscheme.scheme=https"
      - "traefik.http.middlewares.secureRedirectTTRss.redirectscheme.port=${PORT_TTRSS}"
      - "traefik.http.routers.ttrss.middlewares=secureRedirectTTRss"
      - "traefik.http.routers.ttrss-sec.tls=true"
      - "traefik.http.routers.ttrss-sec.rule=Host(`${URL}`)"
      - "traefik.http.routers.ttrss-sec.entrypoints=ttrss"
      - "traefik.http.routers.ttrss-sec.tls.certResolver=le"
    networks:
      - frontend
      - backend
  ttrss-db:
    image: postgres:14-alpine
    container_name: ttrss-db
    environment:
      - POSTGRES_USER=ttrss
      - POSTGRES_PASSWORD=ttrss
    volumes:
      - ~/volumes/ttrss-db:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=telegram://${WATCHTOWER_TG_API_TOKEN}@telegram?channels=${WATCHTOWER_TG_CHANNEL_ID}&title=Watchtower
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=28800
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
